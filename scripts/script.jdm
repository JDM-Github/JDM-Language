

|> jfunc test(test, test2) => {
|> 
	|> jif test => {
		|> jif nested => { }
	|> }
	|> jelseif test2 => |-> Comment Block <-| jany oneLineBlock = 99;
	|> jelse => { }
|> 
	|> jfor i => 34 => { }       |> Stop
	|> jfor i => 1, 34 => { }    |> Start, Stop
	|> jfor i => 1, 34, 2 => { } |> Start, Stop, Step
|> 
	|> jforeach val => list => { }
	|> jforeach key, val => map => { }
|> 
	|> jforeach val => [1, 2, 3] => { }
	|> jforeach val, key => {'1'=>1, '2'=>2, "3"=>3} => { }
|> 
	|> jforeach val => jreverse => list => { }
	|> jforeach key, val => jreverse => map => { }
|> 
	|> jforeach val => jreverse => [1, 2, 3] => { }
	|> jforeach val, key => jreverse => {'1'=>1, '2'=>2, "3"=>3} => { }
|> }

jany lambda = jlambda(() => {}) + ()=>{}=>();

test.test() = 9;
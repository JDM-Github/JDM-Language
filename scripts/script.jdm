|> 
|> $logn => "PROBLEM 1";
|> $logn => join(reverse(split(input("INPUT: "))), " ");
|> 
|> $logn => "PROBLEM 2";
|> jfor i => 1, 10 => {
	|> jif     (i % 3 == 0 && i % 5 == 0) => $logn => "DCI";
	|> jelseif (i % 3 == 0) => $logn => "Silver";
	|> jelseif (i % 5 == 0) => $logn => "Vikings";
	|> jelse => $logn => i;
|> }

jfunc getType(jany type) => {
	jreturn ref(type) + 10;
}
jfunc anotherFunc(jany type) => {
	$logn => type;
}

jstring test = "TEST";
jany test2 = ref(test) + "TETS";
test = "TEST";

$log => test2;

|> 
|> 
|> $include => Console;
|> Console().run("JDM pogi", 100, 100);

|> jfunc testFunc(jint arg1, jint arg2) => {
	|> $log => arg1 => ' ' => arg2 => '\n'; 
	|> $sleep => 1000;
	|> testFunc(arg1 + 100, arg2);
|> }
|> testFunc(100, 200);
